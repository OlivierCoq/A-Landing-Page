$(function(){"use strict";QUnit.module("button plugin"),QUnit.test("should be defined on jquery object",function(t){t.expect(1),t.ok($(document.body).button,"button method is defined")}),QUnit.module("button",{beforeEach:function(){$.fn.bootstrapButton=$.fn.button.noConflict()},afterEach:function(){$.fn.button=$.fn.bootstrapButton,delete $.fn.bootstrapButton}}),QUnit.test("should provide no conflict",function(t){t.expect(1),t.strictEqual($.fn.button,void 0,"button was set back to undefined (org value)")}),QUnit.test("should return jquery collection containing the element",function(t){t.expect(2);var e=$("<div/>"),a=e.bootstrapButton();t.ok(a instanceof $,"returns jquery collection"),t.strictEqual(a[0],e[0],"collection contains element")}),QUnit.test("should return set state to loading",function(t){t.expect(4);var e=e('<button class="btn" data-loading-text="fat">mdo</button>');t.strictEqual($btn.html(),"mdo","text equals mdo"),$btn.bootstrapButton("loading");var a=t.async();setTimeout(function(){t.strictEqual($btn.html(),"fat","text equals fat"),t.ok($btn[0].hasAttribute("disabled"),"is disabled"),t.ok($btn.hasClass("disabled"),"has disabled class"),a()},0)}),QUnit.test("should return reset state",function(t){t.expect(7);var e=e('<button class="btn" data-loading-text="fat">mdo</button>');t.strictEqual($btn.html(),"mdo","text equals mdo"),$btn.bootstrapButton("loading");var a=t.async();setTimeout(function(){t.strictEqual($btn.html(),"fat","text equals fat"),t.ok($btn[0].hasAttribute("disabled"),"is disabled"),t.ok($btn.hasClass("disabled"),"has disabled class"),a();var e=t.async();$btn.bootstrapButton("reset"),setTimeout(function(){t.strictEqual($btn.html(),"mdo","text equals mdo"),t.ok(!$btn[0].hasAttribute("disabled"),"is not disabled"),t.ok(!$btn.hasClass("disabled"),"does not have disabled class"),e()},0)},0)}),QUnit.test("should work with an empty string as reset state",function(t){t.expect(7);var e=e('<button class="btn" data-loading-text="fat"/>');t.strictEqual($btn.html(),"",'text equals ""'),$btn.bootstrapButton("loading");var a=t.async();setTimeout(function(){t.strictEqual($btn.html(),"fat","text equals fat"),t.ok($btn[0].hasAttribute("disabled"),"is disabled"),t.ok($btn.hasClass("disabled"),"has disabled class"),a();var e=t.async();$btn.bootstrapButton("reset"),setTimeout(function(){t.strictEqual($btn.html(),"",'text equals ""'),t.ok(!$btn[0].hasAttribute("disabled"),"is not disabled"),t.ok(!$btn.hasClass("disabled"),"does not have disabled class"),e()},0)},0)}),QUnit.test("should toggle active",function(t){t.expect(2);var e=e('<button class="btn" data-toggle="button">mdo</button>');t.ok(!$btn.hasClass("active"),"does not have active class"),$btn.bootstrapButton("toggle"),t.ok($btn.hasClass("active"),"has class active")}),QUnit.test("should toggle active when children are clicked",function(t){t.expect(2);var e=e('<button class="btn" data-toggle="button">mdo</button>'),a=e("<i/>");$btn.append(a).appendTo("#qunit-fixture"),t.ok(!$btn.hasClass("active"),"does not have active class"),a.trigger("click"),t.ok($btn.hasClass("active"),"has class active")}),QUnit.test("should toggle aria-pressed",function(t){t.expect(2);var e=e('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>');t.strictEqual($btn.attr("aria-pressed"),"false","aria-pressed state is false"),$btn.bootstrapButton("toggle"),t.strictEqual($btn.attr("aria-pressed"),"true","aria-pressed state is true")}),QUnit.test("should toggle aria-pressed when children are clicked",function(t){t.expect(2);var e=e('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>'),a=e("<i/>");$btn.append(a).appendTo("#qunit-fixture"),t.strictEqual($btn.attr("aria-pressed"),"false","aria-pressed state is false"),a.trigger("click"),t.strictEqual($btn.attr("aria-pressed"),"true","aria-pressed state is true")}),QUnit.test("should check for closest matching toggle",function(t){t.expect(12);var e=$('<div class="btn-group" data-toggle="buttons"><label class=" active"><input type="radio" name="options" id="option1" checked="true"> Option 1</label><label class=""><input type="radio" name="options" id="option2"> Option 2</label><label class=""><input type="radio" name="options" id="option3"> Option 3</label></div>').appendTo("#qunit-fixture"),a=e.children().eq(0),s=e.children().eq(1);t.ok(a.hasClass("active"),"btn1 has active class"),t.ok(a.find("input").prop("checked"),"btn1 is checked"),t.ok(!s.hasClass("active"),"btn2 does not have active class"),t.ok(!s.find("input").prop("checked"),"btn2 is not checked"),s.find("input").trigger("click"),t.ok(!a.hasClass("active"),"btn1 does not have active class"),t.ok(!a.find("input").prop("checked"),"btn1 is not checked"),t.ok(s.hasClass("active"),"btn2 has active class"),t.ok(s.find("input").prop("checked"),"btn2 is checked"),s.find("input").trigger("click"),t.ok(!a.hasClass("active"),"btn1 does not have active class"),t.ok(!a.find("input").prop("checked"),"btn1 is not checked"),t.ok(s.hasClass("active"),"btn2 has active class"),t.ok(s.find("input").prop("checked"),"btn2 is checked")})});